"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _models = require("../../../../../models");

var _keys = require("../../../../../models/keys");

const updateOrganizationController = async (req, res, next) => {
  try {
    const {
      city,
      state,
      zip,
      mission,
      uuid
    } = req.body;
    const updateObj = {};

    if (city) {
      updateObj[_keys.OrganizationKeys.CITY] = city;
    }

    if (state) {
      updateObj[_keys.OrganizationKeys.STATE] = state;
    }

    if (zip) {
      updateObj[_keys.OrganizationKeys.ZIP] = zip;
    }

    if (mission) {
      updateObj[_keys.OrganizationKeys.MISSION] = mission;
    }

    const organization = await _models.Organizations.findOne({
      where: {
        [_keys.OrganizationKeys.UUID]: uuid
      }
    });
    await organization.update(updateObj);
    const updatedOrganization = await _models.Organizations.findOne({
      where: {
        [_keys.OrganizationKeys.UUID]: uuid
      }
    });
    res.json(updatedOrganization);
  } catch (err) {
    next(err);
  }
};

var _default = updateOrganizationController;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXMvdjEvb3JnYW5pemF0aW9uL2NvbnRyb2xsZXJzL3VwZGF0ZU9yZ2FuaXphdGlvbi9pbmRleC50cyJdLCJuYW1lcyI6WyJ1cGRhdGVPcmdhbml6YXRpb25Db250cm9sbGVyIiwicmVxIiwicmVzIiwibmV4dCIsImNpdHkiLCJzdGF0ZSIsInppcCIsIm1pc3Npb24iLCJ1dWlkIiwiYm9keSIsInVwZGF0ZU9iaiIsIk9yZ2FuaXphdGlvbktleXMiLCJDSVRZIiwiU1RBVEUiLCJaSVAiLCJNSVNTSU9OIiwib3JnYW5pemF0aW9uIiwiT3JnYW5pemF0aW9ucyIsImZpbmRPbmUiLCJ3aGVyZSIsIlVVSUQiLCJ1cGRhdGUiLCJ1cGRhdGVkT3JnYW5pemF0aW9uIiwianNvbiIsImVyciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOztBQUNBOztBQUVBLE1BQU1BLDRCQUE0QyxHQUFHLE9BQU9DLEdBQVAsRUFBWUMsR0FBWixFQUFpQkMsSUFBakIsS0FBMEI7QUFDN0UsTUFBSTtBQUNGLFVBQU07QUFBRUMsTUFBQUEsSUFBRjtBQUFRQyxNQUFBQSxLQUFSO0FBQWVDLE1BQUFBLEdBQWY7QUFBb0JDLE1BQUFBLE9BQXBCO0FBQTZCQyxNQUFBQTtBQUE3QixRQUFzQ1AsR0FBRyxDQUFDUSxJQUFoRDtBQUNBLFVBQU1DLFNBQWtDLEdBQUcsRUFBM0M7O0FBQ0EsUUFBSU4sSUFBSixFQUFVO0FBQ1JNLE1BQUFBLFNBQVMsQ0FBQ0MsdUJBQWlCQyxJQUFsQixDQUFULEdBQW1DUixJQUFuQztBQUNEOztBQUNELFFBQUlDLEtBQUosRUFBVztBQUNUSyxNQUFBQSxTQUFTLENBQUNDLHVCQUFpQkUsS0FBbEIsQ0FBVCxHQUFvQ1IsS0FBcEM7QUFDRDs7QUFDRCxRQUFJQyxHQUFKLEVBQVM7QUFDUEksTUFBQUEsU0FBUyxDQUFDQyx1QkFBaUJHLEdBQWxCLENBQVQsR0FBa0NSLEdBQWxDO0FBQ0Q7O0FBQ0QsUUFBSUMsT0FBSixFQUFhO0FBQ1hHLE1BQUFBLFNBQVMsQ0FBQ0MsdUJBQWlCSSxPQUFsQixDQUFULEdBQXNDUixPQUF0QztBQUNEOztBQUNELFVBQU1TLFlBQVksR0FBRyxNQUFNQyxzQkFBY0MsT0FBZCxDQUFzQjtBQUMvQ0MsTUFBQUEsS0FBSyxFQUFFO0FBQ0wsU0FBQ1IsdUJBQWlCUyxJQUFsQixHQUF5Qlo7QUFEcEI7QUFEd0MsS0FBdEIsQ0FBM0I7QUFNQSxVQUFNUSxZQUFZLENBQUNLLE1BQWIsQ0FBb0JYLFNBQXBCLENBQU47QUFFQSxVQUFNWSxtQkFBbUIsR0FBRyxNQUFNTCxzQkFBY0MsT0FBZCxDQUFzQjtBQUN0REMsTUFBQUEsS0FBSyxFQUFFO0FBQ0wsU0FBQ1IsdUJBQWlCUyxJQUFsQixHQUF5Qlo7QUFEcEI7QUFEK0MsS0FBdEIsQ0FBbEM7QUFNQU4sSUFBQUEsR0FBRyxDQUFDcUIsSUFBSixDQUFTRCxtQkFBVDtBQUNELEdBOUJELENBOEJFLE9BQU9FLEdBQVAsRUFBWTtBQUNackIsSUFBQUEsSUFBSSxDQUFDcUIsR0FBRCxDQUFKO0FBQ0Q7QUFDRixDQWxDRDs7ZUFvQ2V4Qiw0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlcXVlc3RIYW5kbGVyIH0gZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgeyBPcmdhbml6YXRpb25zIH0gZnJvbSAnbW9kZWxzJztcbmltcG9ydCB7IE9yZ2FuaXphdGlvbktleXMgfSBmcm9tICdtb2RlbHMva2V5cyc7XG5cbmNvbnN0IHVwZGF0ZU9yZ2FuaXphdGlvbkNvbnRyb2xsZXI6IFJlcXVlc3RIYW5kbGVyID0gYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBjaXR5LCBzdGF0ZSwgemlwLCBtaXNzaW9uLCB1dWlkIH0gPSByZXEuYm9keTtcbiAgICBjb25zdCB1cGRhdGVPYmo6IHsgW3g6IHN0cmluZ106IHN0cmluZyB9ID0ge307XG4gICAgaWYgKGNpdHkpIHtcbiAgICAgIHVwZGF0ZU9ialtPcmdhbml6YXRpb25LZXlzLkNJVFldID0gY2l0eTtcbiAgICB9XG4gICAgaWYgKHN0YXRlKSB7XG4gICAgICB1cGRhdGVPYmpbT3JnYW5pemF0aW9uS2V5cy5TVEFURV0gPSBzdGF0ZTtcbiAgICB9XG4gICAgaWYgKHppcCkge1xuICAgICAgdXBkYXRlT2JqW09yZ2FuaXphdGlvbktleXMuWklQXSA9IHppcDtcbiAgICB9XG4gICAgaWYgKG1pc3Npb24pIHtcbiAgICAgIHVwZGF0ZU9ialtPcmdhbml6YXRpb25LZXlzLk1JU1NJT05dID0gbWlzc2lvbjtcbiAgICB9XG4gICAgY29uc3Qgb3JnYW5pemF0aW9uID0gYXdhaXQgT3JnYW5pemF0aW9ucy5maW5kT25lKHtcbiAgICAgIHdoZXJlOiB7XG4gICAgICAgIFtPcmdhbml6YXRpb25LZXlzLlVVSURdOiB1dWlkXG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBhd2FpdCBvcmdhbml6YXRpb24udXBkYXRlKHVwZGF0ZU9iaik7XG5cbiAgICBjb25zdCB1cGRhdGVkT3JnYW5pemF0aW9uID0gYXdhaXQgT3JnYW5pemF0aW9ucy5maW5kT25lKHtcbiAgICAgIHdoZXJlOiB7XG4gICAgICAgIFtPcmdhbml6YXRpb25LZXlzLlVVSURdOiB1dWlkXG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXMuanNvbih1cGRhdGVkT3JnYW5pemF0aW9uKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgbmV4dChlcnIpO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1cGRhdGVPcmdhbml6YXRpb25Db250cm9sbGVyO1xuIl19